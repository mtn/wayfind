Launched Python process with PID: 19691
[DAPClient 1] New instance created. ID: 1
Connected to DAP server on port 5684
--> Sent (seq 1, cmd: initialize): {"seq":1,"type":"request","command":"initialize","arguments":{"adapterID":"python","clientID":"dap_test_client","clientName":"DAP Test","linesStartAt1":true,"columnsStartAt1":true,"pathFormat":"path","supportsVariableType":true,"supportsEvaluateForHovers":true}}
[DAPClient 1] Event received: output with payload: {
  category: 'telemetry',
  output: 'ptvsd',
  data: { packageVersion: '1.8.12' }
}
Emitted event: output
<-- Received: {
  seq: 1,
  type: 'event',
  event: 'output',
  body: {
    category: 'telemetry',
    output: 'ptvsd',
    data: { packageVersion: '1.8.12' }
  }
}
[DAPClient 1] Event received: output with payload: {
  category: 'telemetry',
  output: 'debugpy',
  data: { packageVersion: '1.8.12' }
}
Emitted event: output
<-- Received: {
  seq: 2,
  type: 'event',
  event: 'output',
  body: {
    category: 'telemetry',
    output: 'debugpy',
    data: { packageVersion: '1.8.12' }
  }
}
[DAPClient 1] Event received: debugpySockets with payload: {
  sockets: [
    { host: '127.0.0.1', port: 5684, internal: false },
    { host: '127.0.0.1', port: 50266, internal: true }
  ]
}
Emitted event: debugpySockets
<-- Received: {
  seq: 3,
  type: 'event',
  event: 'debugpySockets',
  body: { sockets: [ [Object], [Object] ] }
}
<-- Received: {
  seq: 4,
  type: 'response',
  request_seq: 1,
  success: true,
  command: 'initialize',
  body: {
    supportsCompletionsRequest: true,
    supportsConditionalBreakpoints: true,
    supportsConfigurationDoneRequest: true,
    supportsDebuggerProperties: true,
    supportsDelayedStackTraceLoading: true,
    supportsEvaluateForHovers: true,
    supportsExceptionInfoRequest: true,
    supportsExceptionOptions: true,
    supportsFunctionBreakpoints: true,
    supportsHitConditionalBreakpoints: true,
    supportsLogPoints: true,
    supportsModulesRequest: true,
    supportsSetExpression: true,
    supportsSetVariable: true,
    supportsValueFormattingOptions: true,
    supportsTerminateRequest: true,
    supportsGotoTargetsRequest: true,
    supportsClipboardContext: true,
    exceptionBreakpointFilters: [ [Object], [Object], [Object] ],
    supportsStepInTargetsRequest: true
  }
}
--> Sent (seq 2, cmd: attach): {"seq":2,"type":"request","command":"attach","arguments":{"host":"127.0.0.1","port":5684}}
[DAPClient 1] Event received: debugpyWaitingForServer with payload: { host: '127.0.0.1', port: 50266 }
Emitted event: debugpyWaitingForServer
<-- Received: {
  seq: 5,
  type: 'event',
  event: 'debugpyWaitingForServer',
  body: { host: '127.0.0.1', port: 50266 }
}
[DAPClient 1] Event received: initialized with payload: undefined
Emitted event: initialized
<-- Received: { seq: 6, type: 'event', event: 'initialized' }
--> Sent (seq 3, cmd: configurationDone): {"seq":3,"type":"request","command":"configurationDone","arguments":{}}
<-- Received: {
  seq: 7,
  type: 'response',
  request_seq: 3,
  success: true,
  command: 'configurationDone'
}
<-- Received: {
  seq: 8,
  type: 'response',
  request_seq: 2,
  success: true,
  command: 'attach'
}
[DAPClient 1] Event received: process with payload: {
  name: '/Users/mtn/Documents/workspace/wayfind/dap/test_scripts/test_data/c.py',
  systemProcessId: 19691,
  isLocalProcess: true,
  startMethod: 'attach'
}
Emitted event: process
<-- Received: {
  seq: 9,
  type: 'event',
  event: 'process',
  body: {
    name: '/Users/mtn/Documents/workspace/wayfind/dap/test_scripts/test_data/c.py',
    systemProcessId: 19691,
    isLocalProcess: true,
    startMethod: 'attach'
  }
}
[DAPClient 1] Event received: thread with payload: { reason: 'started', threadId: 1 }
Emitted event: thread
<-- Received: {
  seq: 10,
  type: 'event',
  event: 'thread',
  body: { reason: 'started', threadId: 1 }
}
[SSE 2025-02-24T18:57:28.487Z] Sending initial status.
[SSE 2025-02-24T18:57:28.487Z] Sending status: { status: 'running' }
[Python stdout][Session:825585e917e0df7044c67f451cddc2ae]: Starting test script for debugger step-through...
[Python stdout][Session:825585e917e0df7044c67f451cddc2ae]: Adding numbers: 3 and 4
[Python stdout][Session:825585e917e0df7044c67f451cddc2ae]: Result of add_numbers: 7
[Python stdout][Session:825585e917e0df7044c67f451cddc2ae]: Computing Fibonacci sequence for first 10 terms
[Python stdout][Session:825585e917e0df7044c67f451cddc2ae]: Fibonacci sequence: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
[Python stdout][Session:825585e917e0df7044c67f451cddc2ae]: Test script finished.
[DAPClient 1] Event received: thread with payload: { reason: 'exited', threadId: 1 }
Emitted event: thread
<-- Received: {
  seq: 11,
  type: 'event',
  event: 'thread',
  body: { reason: 'exited', threadId: 1 }
}
[DAPClient 1] Event received: terminated with payload: undefined
[DAPClient 1] Processing 'terminated' event. terminated set to true
[SSE 2025-02-24T18:57:28.582Z] Sending status: { status: 'terminated' }
Emitted event: terminated
<-- Received: { seq: 12, type: 'event', event: 'terminated' }
[SSE 2025-02-24T18:57:43.488Z] Sending heartbeat.
[SSE 2025-02-24T18:57:58.488Z] Sending heartbeat.